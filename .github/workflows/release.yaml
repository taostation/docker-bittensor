name: release

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      version:
        description: "Bittensor version to build"
        required: true
        type: string

jobs:
  version:
    if: ${{ inputs.version == '' }}
    runs-on: ubuntu-latest
    outputs:
      isNew: ${{ steps.check-new-version.outputs.isNew }}
      version: ${{ steps.fetch-latest-release.outputs.version }}

    steps:
      - name: Fetch latest release
        id: fetch-latest-release
        run: |
          VERSION=$(curl -f --retry 5 --retry-all-errors https://api.github.com/repos/opentensor/bittensor/releases/latest | jq -r '.tag_name')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Check if new version
        id: check-new-version
        run: |
          IS_NEW=$(docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ steps.fetch-latest-release.outputs.version }} >/dev/null 2>&1 && echo false || echo true)
          echo "isNew=${IS_NEW}" >> $GITHUB_OUTPUT

      - name: Print information
        run: |
          echo "Latest release found: ${{ steps.fetch-latest-release.outputs.version }}"
          echo "Found version is new: ${{ steps.check-new-version.outputs.isNew }}"

  build:
    runs-on: ubuntu-latest
    if: cancelled() || github.event_name != 'schedule' || needs.version.outputs.isNew == 'true'
    needs: version
    permissions:
      contents: read
      packages: write
    env:
      BRANCH: ${{ inputs.version || needs.version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern=v{{version}},value=${{ env.VERSION }},enable=${{ inputs.version == '' }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ env.VERSION }},enable=${{ inputs.version == '' }}
            type=semver,pattern=v{{major}},value=${{ env.VERSION }},enable=${{ inputs.version == '' }}
            type=raw,value=${{ inputs.version }},enable=${{ inputs.version != '' }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: BRANCH=${{ env.VERSION }}
